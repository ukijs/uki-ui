@color0: var(--background-color); // Panel background; appears 3 times
@color1: var(--shadow-color); // Shadow color; appears 4 times
@color2: var(--border-color); // Panel border color; appears 3 times
@color3: var(--text-color-normal); // Active tab text color; appears 2 times
@color4: var(--text-color-softer); // Maximized header background; appears 1 time
@color5: var(--border-color); // Color of dashed border while dragging; appears 1 time
@color6: #452500; // Not sure exactly what this does; appears 1 time
@color7: var(--background-color-softer); // Inactive tab background color; appears 1 time
@color8: var(--background-color-richer); // Splitter color (opacity is set VERY low); appears 1 time
@color9: var(--background-color-richer); // Hovered splitter color; appears 1 time
@color10: var(--text-color-softer); // Inactive tab text c olor; appears 1 time
@color11: transparent; // Page background; appears 1 time

.GLRootView,
.lm_dragging {
  // ".lm_dragging" is applied to BODY tag during Drag and is also directly applied to the root of the object being dragged

  // Entire GoldenLayout Container, if a background is set, it is visible as color of "pane header" and "splitters" (if these latest has opacity very low)
  .lm_goldenlayout {
    background:@color11;
  }

  // Single Pane content (area in which final dragged content is contained)
  .lm_content {
    background: @color0;
    border: 1px solid @color2;
  }

  // Single Pane content during Drag (style of moving window following mouse)
  .lm_dragProxy {
    .lm_content {
      box-shadow: 2px 2px 4px rgba(var(--shadow-color-rgb), 0.2);
    }
  }

  // Placeholder Container of target position
  .lm_dropTargetIndicator {
    box-shadow: inset 0 0 30px rgba(var(--shadow-color-rgb), 40%);
    outline: 1px dashed @color2;

    // Inner Placeholder
    .lm_inner {
      background: @color1;
      opacity: 0.1;
    }
  }

  // Separator line (handle to change pane size)
  .lm_splitter {
    background: @color8;
    opacity: 0.001;
    transition: opacity 200ms ease;

    &:hover, // When hovered by mouse...
    &.lm_dragging {
      background: @color9;
      opacity: 1;
    }
  }

  // Pane Header (container of Tabs for each pane)
  .lm_header {
    height: var(--form-element-height) !important;

    // Single Tab container. A single Tab is set for each pane, a group of Tabs are contained in ".lm_header"
    .lm_tab {
      font-weight: 600;
      font-size: 11px;
      height: calc(var(--form-element-height) - 7.2px);
      letter-spacing: .1em;
      text-transform: uppercase;
      color: @color10;
      background: @color7;
      display: flex;
      align-items: center;
      white-space: nowrap;
      margin: 0;
      padding: 2.4px 1.5em 4px 1.5em;
      border: 1px solid @color2;
      border-bottom: none;
      border-radius: var(--corner-radius) var(--corner-radius) 0 0;

      .lm_title {
        padding-top: 1px;
        margin: 0 0.5em;
      }

      .icon {
        img {
          width: 11px;
          height: 11px;
          margin-top: 5px;
        }
        margin: 0 0.5em;
        filter: url(#recolorImageTo--disabled-color);

        &:hover {
          filter: url(#recolorImageTo--text-color-normal);
        }
      }

      // Close Tab Icon
      .lm_close_tab {
        position: relative;
        top: -0.3em;
        margin: 0 -0.5em 0 0.5em;
        &:after {
          content: '\2a09';
          color: var(--disabled-color);
          font-size: 1.3em;
        }
        &:hover:after {
          color: var(--text-color-normal);
        }
      }

      // If Tab is active, so if it's in foreground
      &.lm_active {
        padding-bottom: 5px;
      }
    }
  }
  .lm_tabdropdown_list {
    border-radius: var(--corner-radius);
    box-shadow: 2px 2px 5px rgba(var(--shadow-color-rgb), 0.75);
    .lm_tab {
      border: none;
      border-radius: 0;
      .icon {
        display: none;
      }
    }
  }

  .lm_dragProxy,
  .lm_stack {
    &.lm_right {
      .lm_header .lm_tab {
        &.lm_active {
          box-shadow: 2px -2px 2px -2px rgba(var(--shadow-color-rgb), 0.2);
        }
      }
    }

    &.lm_bottom {
      .lm_header .lm_tab {
        &.lm_active {
          box-shadow: 2px 2px 2px -2px rgba(var(--shadow-color-rgb), 0.2);
        }
      }
    }
  }

  // If Pane Header (container of Tabs for each pane) is selected (used only if addition of new Contents is made "by selection" and not "by drag")
  .lm_selected {
    .lm_header {
      background-color: @color6;
    }
  }

  .lm_tab {
    &:hover, // If Tab is hovered
    &.lm_active // If Tab is active, so if it's in foreground
    {
      background: @color0;
      color: @color3;
    }
  }

  // Pane controls (popout, maximize, minimize, close)
  .lm_controls {
    // All Pane controls shares these
    > li {
      position: relative;
      margin: 0 0.25em;
      &.lm_tabdropdown:before,
      &:after{
        color: var(--disabled-color);
      }

      &.lm_tabdropdown:hover:before,
      &:hover:after {
        color: var(--text-color-normal);
      }
    }

    // Icon to PopOut Pane, so move it to a different Browser Window
    .lm_popout:after {
      content: '\1f5d7';
    }

    // Icon to Maximize Pane, so it will fill the entire GoldenLayout Container
    .lm_maximise:after {
      content: '\1f5d6';
    }

    // Icon to Close Pane and so remove it from GoldenLayout Container
    .lm_close {
      margin: 1px 0 0 0.25em;
      &:after {
        content: '\2a09';
      }
    }
  }

  // If a specific Pane is maximized
  .lm_maximised {
    // Pane Header (container of Tabs for each pane) can have different style when is Maximized
    .lm_header {
      background-color: @color4;
    }

    // Pane controls are different in Maximized Mode, especially the old Icon "Maximise" that now has a different meaning, so "Minimize" (even if CSS Class did not change)
    .lm_controls {
      .lm_maximise:after {
        content: '\1f5d5';
      }
    }
  }

  .lm_transition_indicator {
    background-color: @color1;
    border: 1px dashed @color5;
  }
}

// If a specific Pane is Popped Out, so move it to a different Browser Window, Icon to restore original position is:
// (note, this has to be outside the GLRootView namespace because the root class name won't make it into the popout)
.lm_popin {
  cursor: pointer;
  top: 0;
  left: 0;
  bottom: unset;
  right: unset; // GoldenLayout's default bottom-right interferes with scrollbars, window resizers, etc
  background: var(--background-color);
  border: 1px solid var(--border-color);
  border-radius: 0 0 var(--corner-radius) 0;

  &:after {
    content: '\25f0';
    color: var(--text-color-softer);
    position: relative;
    top: -3px;
    right: -3px;
  }
  &:hover {
    border-color: var(--text-color-softer);
    &:after {
      color: var(--text-color-normal);
    }
  }

  // We use :after instead of these in this theme...
  .lm_bg {
    display: none;
  }
  .lm_icon {
    display: none;
  }
}
